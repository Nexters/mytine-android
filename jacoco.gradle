apply plugin: "jacoco"

def deployDir = System.getenv("BITRISE_DEPLOY_DIR") ?: "$projectDir/build"

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

project.afterEvaluate {
    android.applicationVariants.all { variant ->
        def variantName = variant.name
        def testTaskName = "test${variantName.capitalize()}UnitTest"

        tasks.create(name: "${testTaskName}Coverage", type: JacocoReport, dependsOn: "$testTaskName") {
            group = "Reporting"
            description = "Generate Jacoco coverage reports for the ${variantName.capitalize()} build."

            reports {
                html.enabled = true
                xml.enabled = true
            }

            def excludes = [
                    '**/*Test*.*',
                    '**/*JavascriptBridge.class',
                    '**/R.class',
                    '**/R$*.class',
                    '**/Manifest*.*',
                    'android/**/*.*',
                    '**/BuildConfig.*',
                    '**/Lambda$*.class',
                    '**/Lambda.class',
                    '**/*Lambda.class',
                    '**/*Lambda*.class',
                    '**/*$InjectAdapter.class',
                    '**/*$ModuleAdapter.class',
                    '**/*$ViewInjector*.class',
                    '**/*_MembersInjector.class',
                    '*/*_MembersInjector*.*',
                    '**/*_*Factory*.*',
                    '*/*Component*.*',
                    '**/*Module*.*',
                    '**/*Dagger*.*',
                    '**/*_Provide*Factory*.*',
                    '**/*_Factory.*',
                    '**/*_Impl*.*',
                    '**/*$*$*.*',
                    '**/androidx/*',
                    '**/*Adapter*.*',
                    '**/*Fragment*.*',
                    '**/*Activity*.*',
                    '**/*ViewHolder*.*',
                    '**/BR.class',
                    '**/com/nexters/mytine/databinding/*',
                    '**/com/nexters/mytine/generated/*',
                    '**/com/nexters/mytine/*.class',
            ]

            def javaClasses = fileTree(dir: variant.javaCompiler.destinationDir, excludes: excludes)
            def kotlinClasses = fileTree(dir: "${buildDir}/tmp/kotlin-classes/${variantName}", excludes: excludes)
            classDirectories.setFrom(files([javaClasses, kotlinClasses]))

            sourceDirectories.setFrom(files([
                    "$project.projectDir/src/main/java",
                    "$project.projectDir/src/${variantName}/java",
                    "$project.projectDir/src/main/kotlin",
                    "$project.projectDir/src/${variantName}/kotlin"
            ]))

            executionData.setFrom(files("$deployDir/jacoco/${testTaskName}.exec"))
        }
    }
}