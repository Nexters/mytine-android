// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        compile_sdk_version = 29
        min_sdk_version = 24
        target_sdk_version = 29

        android_gradle_version = '4.0.1'

        kotlin_version = "1.3.72"
        coroutine_version = "1.3.7"
        appcompat_version = '1.1.0'
        fragment_version = '1.2.5'
        recyclerview_version = '1.1.0'
        annotation_version = '1.1.0'
        constraint_layout_version = '2.0.0-beta6'
        navigation_version = '2.3.0'
        lifecycle_version = '2.2.0'
        room_version = '2.2.5'
        ktx_version = '1.3.0'
        material_version = '1.1.0'
        dagger_version = '2.28.3'
        dagger_hilt_android_version = '2.28.3-alpha'
        dagger_hilt_version = '1.0.0-alpha01'
        threetenabp_version = '1.2.4'
        insetter_version = "0.3.0"
        timber_version = '4.7.1'
        viewpager2_version = '1.1.0-alpha01'

        ktlint_version = '0.37.2'
        detekt_version = '1.10.0'

        junit_version = '4.13'
        test_ext_junit_version = '1.1.1'
        mockito_version = '3.3.3'
        hamcrest_version = '1.3'
        arch_testing_version = '2.1.0'
        robolectric_version = '4.3.1'
        espresso_version = '3.2.0'
        truth_version = '1.0.1'
        threetenabp_test_version = '1.4.2'
        runner_version = '1.2.0'

        jacocoEnabled = (System.properties.getProperty("jacocoEnabled") ?: "false")
    }

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$android_gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigation_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$dagger_hilt_android_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def teamConfig(configFile) {
    def teamConfigDir = file('teamConfig')
    return new File(teamConfigDir, configFile)
}